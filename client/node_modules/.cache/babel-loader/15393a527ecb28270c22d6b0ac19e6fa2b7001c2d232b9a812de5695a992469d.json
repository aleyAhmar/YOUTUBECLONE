{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   currentVideo: null,\n//   loading: false,\n//   error: false,\n// };\n\n// export const videoSlice = createSlice({\n//     name: \"video\",\n//     initialState,\n//     reducers: {\n//       fetchStart: (state) => {\n//         state.loading = true;\n//       },\n//       fetchSuccess: (state, action) => {\n//         state.loading = false;\n//         state.currentUser = action.payload;\n//       },\n//       fetchFailure: (state) => {\n//         state.loading = false;\n//         state.error = true;\n//       },\n//       like: (state, action) => {\n//         if (!state.currentVideo.likes.includes(action.payload)) {\n//           state.currentVideo.likes.push(action.payload);\n//           state.currentVideo.dislikes.splice(\n//             state.currentVideo.dislikes.findIndex(\n//               (userId) => userId === action.payload\n//             ),\n//             1\n//           );\n//         }\n//       },\n//       dislike: (state, action) => {\n//         if (!state.currentVideo.dislikes.includes(action.payload)) {\n//           state.currentVideo.dislikes.push(action.payload);\n//           state.currentVideo.likes.splice(\n//             state.currentVideo.likes.findIndex(\n//               (userId) => userId === action.payload\n//             ),\n//             1\n//           );\n//         }\n//       },\n//     },\n//   }); \n\n//   export const { fetchStart, fetchSuccess, fetchFailure} = videoSlice.actions;\n\n//   export default videoSlice.reducer;","map":{"version":3,"names":[],"sources":["D:/WORK/semester 5/SE/final3/client/src/redux/videoSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const initialState = {\r\n//   currentVideo: null,\r\n//   loading: false,\r\n//   error: false,\r\n// };\r\n\r\n// export const videoSlice = createSlice({\r\n//     name: \"video\",\r\n//     initialState,\r\n//     reducers: {\r\n//       fetchStart: (state) => {\r\n//         state.loading = true;\r\n//       },\r\n//       fetchSuccess: (state, action) => {\r\n//         state.loading = false;\r\n//         state.currentUser = action.payload;\r\n//       },\r\n//       fetchFailure: (state) => {\r\n//         state.loading = false;\r\n//         state.error = true;\r\n//       },\r\n//       like: (state, action) => {\r\n//         if (!state.currentVideo.likes.includes(action.payload)) {\r\n//           state.currentVideo.likes.push(action.payload);\r\n//           state.currentVideo.dislikes.splice(\r\n//             state.currentVideo.dislikes.findIndex(\r\n//               (userId) => userId === action.payload\r\n//             ),\r\n//             1\r\n//           );\r\n//         }\r\n//       },\r\n//       dislike: (state, action) => {\r\n//         if (!state.currentVideo.dislikes.includes(action.payload)) {\r\n//           state.currentVideo.dislikes.push(action.payload);\r\n//           state.currentVideo.likes.splice(\r\n//             state.currentVideo.likes.findIndex(\r\n//               (userId) => userId === action.payload\r\n//             ),\r\n//             1\r\n//           );\r\n//         }\r\n//       },\r\n//     },\r\n//   }); \r\n\r\n//   export const { fetchStart, fetchSuccess, fetchFailure} = videoSlice.actions;\r\n\r\n//   export default videoSlice.reducer;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}