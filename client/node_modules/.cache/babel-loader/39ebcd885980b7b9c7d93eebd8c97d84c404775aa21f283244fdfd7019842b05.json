{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentUser: null,\n  loading: false,\n  error: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: state => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n    }\n    //   subscription: (state, action) => {\n    //     if (state.currentUser.subscribedUsers.includes(action.payload)) {\n    //       state.currentUser.subscribedUsers.splice(\n    //         state.currentUser.subscribedUsers.findIndex(\n    //           (channelId) => channelId === action.payload\n    //         ),\n    //         1\n    //       );\n    //     } else {\n    //       state.currentUser.subscribedUsers.push(action.payload);\n    //     }\n    //   },\n  }\n});\n\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","loading","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","actions","reducer"],"sources":["D:/WORK/semester 5/SE/final3/client/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState,\r\n    reducers: {\r\n      loginStart: (state) => {\r\n        state.loading = true;\r\n      },\r\n      loginSuccess: (state, action) => {\r\n        state.loading = false;\r\n        state.currentUser = action.payload;\r\n      },\r\n      loginFailure: (state) => {\r\n        state.loading = false;\r\n        state.error = true;\r\n      },\r\n      logout: (state) => {\r\n        state.currentUser = null;\r\n        state.loading = false;\r\n        state.error = false;\r\n      },\r\n    //   subscription: (state, action) => {\r\n    //     if (state.currentUser.subscribedUsers.includes(action.payload)) {\r\n    //       state.currentUser.subscribedUsers.splice(\r\n    //         state.currentUser.subscribedUsers.findIndex(\r\n    //           (channelId) => channelId === action.payload\r\n    //         ),\r\n    //         1\r\n    //       );\r\n    //     } else {\r\n    //       state.currentUser.subscribedUsers.push(action.payload);\r\n    //     }\r\n    //   },\r\n    },\r\n  }); \r\n\r\n  export const { loginStart, loginSuccess, loginFailure, logout} = userSlice.actions;\r\n\r\n  export default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,YAAY,EAAGJ,KAAK,IAAK;MACvBA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDU,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACP,WAAW,GAAG,IAAI;MACxBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,KAAK;IACrB;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEI,UAAU;EAAEE,YAAY;EAAEG,YAAY;EAAEC;AAAM,CAAC,GAAGT,SAAS,CAACU,OAAO;AAElF,eAAeV,SAAS,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}