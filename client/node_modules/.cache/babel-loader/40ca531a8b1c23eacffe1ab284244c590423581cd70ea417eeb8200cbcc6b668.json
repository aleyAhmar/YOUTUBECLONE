{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import ThumbUpOutlinedIcon from \"@mui/icons-material/ThumbUpOutlined\";\n// import ThumbDownOffAltOutlinedIcon from \"@mui/icons-material/ThumbDownOffAltOutlined\";\n// import ReplyOutlinedIcon from \"@mui/icons-material/ReplyOutlined\";\n// import AddTaskOutlinedIcon from \"@mui/icons-material/AddTaskOutlined\";\n// import ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\n// import ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\n// import Comments from \"../components/Comments\";\n// import Card from \"../components/Card\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { useLocation } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { dislike, fetchSuccess, like } from \"../redux/videoSlice\";\n// // import { format } from \"timeago.js\";\n// import { subscription } from \"../redux/userSlice\";\n// import Recommendation from \"../components/Recommendation\";;\n\n// const Container = styled.div`\n//   display: flex;\n//   gap: 24px;\n// `;\n\n// const Content = styled.div`\n//   flex: 5;\n// `;\n// const VideoWrapper = styled.div``;\n\n// const Title = styled.h1`\n//   font-size: 18px;\n//   font-weight: 400;\n//   margin-top: 20px;\n//   margin-bottom: 10px;\n//   color: ${({ theme }) => theme.text};\n// `;\n\n// const Details = styled.div`\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n// `;\n\n// const Info = styled.span`\n//   color: ${({ theme }) => theme.textSoft};\n// `;\n\n// const Buttons = styled.div`\n//   display: flex;\n//   gap: 20px;\n//   color: ${({ theme }) => theme.text};\n// `;\n\n// const Button = styled.div`\n//   display: flex;\n//   align-items: center;\n//   gap: 5px;\n//   cursor: pointer;\n// `;\n\n// const Hr = styled.hr`\n//   margin: 15px 0px;\n//   border: 0.5px solid ${({ theme }) => theme.soft};\n// `;\n\n// const Channel = styled.div`\n//   display: flex;\n//   justify-content: space-between;\n// `;\n\n// const ChannelInfo = styled.div`\n//   display: flex;\n//   gap: 20px;\n// `;\n\n// const Image = styled.img`\n//   width: 50px;\n//   height: 50px;\n//   border-radius: 50%;\n// `;\n\n// const ChannelDetail = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   color: ${({ theme }) => theme.text};\n// `;\n\n// const ChannelName = styled.span`\n//   font-weight: 500;\n// `;\n\n// const ChannelCounter = styled.span`\n//   margin-top: 5px;\n//   margin-bottom: 20px;\n//   color: ${({ theme }) => theme.textSoft};\n//   font-size: 12px;\n// `;\n\n// const Description = styled.p`\n//   font-size: 14px;\n// `;\n\n// const Subscribe = styled.button`\n//   background-color: #cc1a00;\n//   font-weight: 500;\n//   color: white;\n//   border: none;\n//   border-radius: 3px;\n//   height: max-content;\n//   padding: 10px 20px;\n//   cursor: pointer;\n// `;\n\n// const VideoFrame = styled.video`\n//   max-height: 720px;\n//   width: 100%;\n//   object-fit: cover;\n// `;\n\n// const Video = () => {\n//   const { currentUser } = useSelector((state) => state.user);\n//   const { currentVideo } = useSelector((state) => state.video);\n//   const dispatch = useDispatch();\n\n//   const path = useLocation().pathname.split(\"/\")[2];\n\n//   const [channel, setChannel] = useState({});\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const videoRes = await axios.get(\n//           `/videos/find/${path}`\n//           );\n//         const channelRes = await axios.get(\n//           `/users/find/${videoRes.data.userId}`\n//         );\n//         setChannel(channelRes.data);\n//         dispatch(fetchSuccess(videoRes.data));\n//       } catch (err) {}\n//     };\n//     fetchData();\n//   }, [path, dispatch]);\n\n//   const handleLike = async () => {\n//     await axios.put(`/users/like/${currentVideo._id}`);\n//     // dispatch(like(currentUser._id));\n//   };\n//   const handleDislike = async () => {\n//     await axios.put(`/users/dislike/${currentVideo._id}`);\n//     // dispatch(dislike(currentUser._id));\n//   };\n\n//   return (\n//     <Container>\n//       <Content>\n//         <VideoWrapper>\n//         <VideoFrame src={currentVideo.videoUrl} controls />\n//         </VideoWrapper>\n//         <Title>{currentVideo.title}</Title>\n//         <Details>\n//           <Info>{currentVideo.views} views â€¢ Jun 22, 2022</Info>\n//           <Buttons>\n//             <Button onClick={handleLike}>\n//             {currentVideo.likes?.includes(currentUser?._id) ? (\n//                 <ThumbUpIcon />\n//               ) : (\n//                 <ThumbUpOutlinedIcon />\n//               )}{\" \"}\n//               {currentVideo.likes?.length}\n//             </Button>\n//             <Button onClick={handleDislike}>\n//             {currentVideo.dislikes?.includes(currentUser?._id) ? (\n//                 <ThumbDownIcon />\n//               ) : (\n//                 <ThumbDownOffAltOutlinedIcon />\n//               )}{\" \"}\n//             </Button>\n//             <Button>\n//               <ReplyOutlinedIcon /> Share\n//             </Button>\n//             <Button>\n//               <AddTaskOutlinedIcon /> Save\n//             </Button>\n//           </Buttons>\n//         </Details>\n//         <Hr />\n//         <Channel>\n//           <ChannelInfo>\n//             <Image src={channel.img} />\n//             <ChannelDetail>\n//               <ChannelName>{channel.name}</ChannelName>\n//               <ChannelCounter>{channel.subscribers} subscribers</ChannelCounter>\n//               <Description>\n//                 {currentVideo.Description}\n//               </Description>\n//             </ChannelDetail>\n//           </ChannelInfo>\n//         <Subscribe>{currentUser.subscribedUsers?.includes(channel._id) ? \"Subscribed\" : \"Subscribe\"}</Subscribe>\n//         </Channel>\n//         <Hr />\n//         <Comments/>\n//       </Content>\n//       <Recommendation tags={currentVideo.tags} />\n\n//     </Container>\n//   );\n// };\n\n// export default Video;","map":{"version":3,"names":[],"sources":["D:/WORK/semester 5/SE/final3/client/src/pages/Video.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import ThumbUpOutlinedIcon from \"@mui/icons-material/ThumbUpOutlined\";\r\n// import ThumbDownOffAltOutlinedIcon from \"@mui/icons-material/ThumbDownOffAltOutlined\";\r\n// import ReplyOutlinedIcon from \"@mui/icons-material/ReplyOutlined\";\r\n// import AddTaskOutlinedIcon from \"@mui/icons-material/AddTaskOutlined\";\r\n// import ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\n// import ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\n// import Comments from \"../components/Comments\";\r\n// import Card from \"../components/Card\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { useLocation } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { dislike, fetchSuccess, like } from \"../redux/videoSlice\";\r\n// // import { format } from \"timeago.js\";\r\n// import { subscription } from \"../redux/userSlice\";\r\n// import Recommendation from \"../components/Recommendation\";;\r\n\r\n// const Container = styled.div`\r\n//   display: flex;\r\n//   gap: 24px;\r\n// `;\r\n\r\n// const Content = styled.div`\r\n//   flex: 5;\r\n// `;\r\n// const VideoWrapper = styled.div``;\r\n\r\n// const Title = styled.h1`\r\n//   font-size: 18px;\r\n//   font-weight: 400;\r\n//   margin-top: 20px;\r\n//   margin-bottom: 10px;\r\n//   color: ${({ theme }) => theme.text};\r\n// `;\r\n\r\n// const Details = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: space-between;\r\n// `;\r\n\r\n// const Info = styled.span`\r\n//   color: ${({ theme }) => theme.textSoft};\r\n// `;\r\n\r\n// const Buttons = styled.div`\r\n//   display: flex;\r\n//   gap: 20px;\r\n//   color: ${({ theme }) => theme.text};\r\n// `;\r\n\r\n// const Button = styled.div`\r\n//   display: flex;\r\n//   align-items: center;\r\n//   gap: 5px;\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const Hr = styled.hr`\r\n//   margin: 15px 0px;\r\n//   border: 0.5px solid ${({ theme }) => theme.soft};\r\n// `;\r\n\r\n// const Channel = styled.div`\r\n//   display: flex;\r\n//   justify-content: space-between;\r\n// `;\r\n\r\n// const ChannelInfo = styled.div`\r\n//   display: flex;\r\n//   gap: 20px;\r\n// `;\r\n\r\n// const Image = styled.img`\r\n//   width: 50px;\r\n//   height: 50px;\r\n//   border-radius: 50%;\r\n// `;\r\n\r\n// const ChannelDetail = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   color: ${({ theme }) => theme.text};\r\n// `;\r\n\r\n// const ChannelName = styled.span`\r\n//   font-weight: 500;\r\n// `;\r\n\r\n// const ChannelCounter = styled.span`\r\n//   margin-top: 5px;\r\n//   margin-bottom: 20px;\r\n//   color: ${({ theme }) => theme.textSoft};\r\n//   font-size: 12px;\r\n// `;\r\n\r\n// const Description = styled.p`\r\n//   font-size: 14px;\r\n// `;\r\n\r\n// const Subscribe = styled.button`\r\n//   background-color: #cc1a00;\r\n//   font-weight: 500;\r\n//   color: white;\r\n//   border: none;\r\n//   border-radius: 3px;\r\n//   height: max-content;\r\n//   padding: 10px 20px;\r\n//   cursor: pointer;\r\n// `;\r\n\r\n// const VideoFrame = styled.video`\r\n//   max-height: 720px;\r\n//   width: 100%;\r\n//   object-fit: cover;\r\n// `;\r\n\r\n// const Video = () => {\r\n//   const { currentUser } = useSelector((state) => state.user);\r\n//   const { currentVideo } = useSelector((state) => state.video);\r\n//   const dispatch = useDispatch();\r\n\r\n//   const path = useLocation().pathname.split(\"/\")[2];\r\n\r\n//   const [channel, setChannel] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const videoRes = await axios.get(\r\n//           `/videos/find/${path}`\r\n//           );\r\n//         const channelRes = await axios.get(\r\n//           `/users/find/${videoRes.data.userId}`\r\n//         );\r\n//         setChannel(channelRes.data);\r\n//         dispatch(fetchSuccess(videoRes.data));\r\n//       } catch (err) {}\r\n//     };\r\n//     fetchData();\r\n//   }, [path, dispatch]);\r\n\r\n//   const handleLike = async () => {\r\n//     await axios.put(`/users/like/${currentVideo._id}`);\r\n//     // dispatch(like(currentUser._id));\r\n//   };\r\n//   const handleDislike = async () => {\r\n//     await axios.put(`/users/dislike/${currentVideo._id}`);\r\n//     // dispatch(dislike(currentUser._id));\r\n//   };\r\n\r\n//   return (\r\n//     <Container>\r\n//       <Content>\r\n//         <VideoWrapper>\r\n//         <VideoFrame src={currentVideo.videoUrl} controls />\r\n//         </VideoWrapper>\r\n//         <Title>{currentVideo.title}</Title>\r\n//         <Details>\r\n//           <Info>{currentVideo.views} views â€¢ Jun 22, 2022</Info>\r\n//           <Buttons>\r\n//             <Button onClick={handleLike}>\r\n//             {currentVideo.likes?.includes(currentUser?._id) ? (\r\n//                 <ThumbUpIcon />\r\n//               ) : (\r\n//                 <ThumbUpOutlinedIcon />\r\n//               )}{\" \"}\r\n//               {currentVideo.likes?.length}\r\n//             </Button>\r\n//             <Button onClick={handleDislike}>\r\n//             {currentVideo.dislikes?.includes(currentUser?._id) ? (\r\n//                 <ThumbDownIcon />\r\n//               ) : (\r\n//                 <ThumbDownOffAltOutlinedIcon />\r\n//               )}{\" \"}\r\n//             </Button>\r\n//             <Button>\r\n//               <ReplyOutlinedIcon /> Share\r\n//             </Button>\r\n//             <Button>\r\n//               <AddTaskOutlinedIcon /> Save\r\n//             </Button>\r\n//           </Buttons>\r\n//         </Details>\r\n//         <Hr />\r\n//         <Channel>\r\n//           <ChannelInfo>\r\n//             <Image src={channel.img} />\r\n//             <ChannelDetail>\r\n//               <ChannelName>{channel.name}</ChannelName>\r\n//               <ChannelCounter>{channel.subscribers} subscribers</ChannelCounter>\r\n//               <Description>\r\n//                 {currentVideo.Description}\r\n//               </Description>\r\n//             </ChannelDetail>\r\n//           </ChannelInfo>\r\n//         <Subscribe>{currentUser.subscribedUsers?.includes(channel._id) ? \"Subscribed\" : \"Subscribe\"}</Subscribe>\r\n//         </Channel>\r\n//         <Hr />\r\n//         <Comments/>\r\n//       </Content>\r\n//       <Recommendation tags={currentVideo.tags} />\r\n\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Video;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}