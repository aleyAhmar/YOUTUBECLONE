{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const initialState = {\n//   currentUser: null,\n//   loading: false,\n//   error: false,\n// };\n\n// export const userSlice = createSlice({\n//     name: \"user\",\n//     initialState,\n//     reducers: {\n//       loginStart: (state) => {\n//         state.loading = true;\n//       },\n//       loginSuccess: (state, action) => {\n//         state.loading = false;\n//         state.currentUser = action.payload;\n//       },\n//       loginFailure: (state) => {\n//         state.loading = false;\n//         state.error = true;\n//       },\n//       logout: (state) => {\n//         state.currentUser = null;\n//         state.loading = false;\n//         state.error = false;\n//       },\n//     },\n//   }); \n\n//   export const { loginStart, loginSuccess, loginFailure, logout} = userSlice.actions;\n\n//   export default userSlice.reducer;","map":{"version":3,"names":[],"sources":["D:/WORK/semester 5/SE/final3/client/src/redux/userSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n// const initialState = {\r\n//   currentUser: null,\r\n//   loading: false,\r\n//   error: false,\r\n// };\r\n\r\n// export const userSlice = createSlice({\r\n//     name: \"user\",\r\n//     initialState,\r\n//     reducers: {\r\n//       loginStart: (state) => {\r\n//         state.loading = true;\r\n//       },\r\n//       loginSuccess: (state, action) => {\r\n//         state.loading = false;\r\n//         state.currentUser = action.payload;\r\n//       },\r\n//       loginFailure: (state) => {\r\n//         state.loading = false;\r\n//         state.error = true;\r\n//       },\r\n//       logout: (state) => {\r\n//         state.currentUser = null;\r\n//         state.loading = false;\r\n//         state.error = false;\r\n//       },\r\n//     },\r\n//   }); \r\n\r\n//   export const { loginStart, loginSuccess, loginFailure, logout} = userSlice.actions;\r\n\r\n//   export default userSlice.reducer;"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}