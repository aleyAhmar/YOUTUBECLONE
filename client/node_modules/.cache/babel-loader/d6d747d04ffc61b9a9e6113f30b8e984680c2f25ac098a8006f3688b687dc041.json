{"ast":null,"code":"// import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n// import userReducer from \"./userSlice.js\";\n// import videoReducer from \"./videoSlice\";\n// import {\n//     persistStore,\n//     persistReducer,\n//     FLUSH,\n//     REHYDRATE,\n//     PAUSE,\n//     PERSIST,\n//     PURGE,\n//     REGISTER,\n//   } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\n// const persistConfig = {\n//     key: \"root\",\n//     version:1,\n//     storage,\n// };\n\n// const rootReducer = combineReducers({ user: userReducer, video: videoReducer });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// export const store = configureStore({\n//     reducer: persistedReducer,\n//     middleware: (getDefaultMiddleware) =>\n//     getDefaultMiddleware({\n//       serializableCheck: {\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//       },\n//     }),\n// })\n\n// export const persistor = persistStore(store)","map":{"version":3,"names":[],"sources":["D:/WORK/semester 5/SE/final3/client/src/redux/store.js"],"sourcesContent":["// import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\n// import userReducer from \"./userSlice.js\";\r\n// import videoReducer from \"./videoSlice\";\r\n// import {\r\n//     persistStore,\r\n//     persistReducer,\r\n//     FLUSH,\r\n//     REHYDRATE,\r\n//     PAUSE,\r\n//     PERSIST,\r\n//     PURGE,\r\n//     REGISTER,\r\n//   } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n// import { PersistGate } from \"redux-persist/integration/react\";\r\n\r\n// const persistConfig = {\r\n//     key: \"root\",\r\n//     version:1,\r\n//     storage,\r\n// };\r\n\r\n// const rootReducer = combineReducers({ user: userReducer, video: videoReducer });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// export const store = configureStore({\r\n//     reducer: persistedReducer,\r\n//     middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// })\r\n\r\n// export const persistor = persistStore(store)"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}