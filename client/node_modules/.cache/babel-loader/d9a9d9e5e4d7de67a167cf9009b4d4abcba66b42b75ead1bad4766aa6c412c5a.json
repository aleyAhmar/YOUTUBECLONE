{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import {\n//   getStorage,\n//   ref,\n//   uploadBytesResumable,\n//   getDownloadURL,\n// } from \"firebase/storage\";\n// import app from \"../firebase\";\n// import axios from \"axios\";\n// import { useNavigate } from \"react-router-dom\";\n\n// const Container = styled.div`\n//   width: 100%;\n//   height: 100%;\n//   position: absolute;\n//   top: 0;\n//   left: 0;\n//   background-color: #000000a7;\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n// `;\n\n// const Wrapper = styled.div`\n//   width: 600px;\n//   height: 600px;\n//   background-color: ${({ theme }) => theme.bgLighter};\n//   color: ${({ theme }) => theme.text};\n//   padding: 20px;\n//   display: flex;\n//   flex-direction: column;\n//   gap: 20px;\n//   position: relative;\n// `;\n// const Close = styled.div`\n//   position: absolute;\n//   top: 10px;\n//   right: 10px;\n//   cursor: pointer;\n// `;\n// const Title = styled.h1`\n//   text-align: center;\n// `;\n\n// const Input = styled.input`\n//   border: 1px solid ${({ theme }) => theme.soft};\n//   color: ${({ theme }) => theme.text};\n//   border-radius: 3px;\n//   padding: 10px;\n//   background-color: transparent;\n//   z-index: 999;\n// `;\n// const Desc = styled.textarea`\n//   border: 1px solid ${({ theme }) => theme.soft};\n//   color: ${({ theme }) => theme.text};\n//   border-radius: 3px;\n//   padding: 10px;\n//   background-color: transparent;\n// `;\n// const Button = styled.button`\n//   border-radius: 3px;\n//   border: none;\n//   padding: 10px 20px;\n//   font-weight: 500;\n//   cursor: pointer;\n//   background-color: ${({ theme }) => theme.soft};\n//   color: ${({ theme }) => theme.textSoft};\n// `;\n// const Label = styled.label`\n//   font-size: 14px;\n// `;\n// const Upload = ({ setOpen }) => {\n//   const [img, setImg] = useState(undefined);\n//   const [video, setVideo] = useState(undefined);\n//   const [imgPerc, setImgPerc] = useState(0);\n//   const [videoPerc, setVideoPerc] = useState(0);\n//   const [inputs, setInputs] = useState({});\n//   const [tags, setTags] = useState([]);\n\n//   const navigate = useNavigate()\n\n//   const handleChange = (e) => {\n//     setInputs((prev) => {\n//       return { ...prev, [e.target.name]: e.target.value };\n//     });\n//   };\n\n//   const handleTags = (e) => {\n//     setTags(e.target.value.split(\",\"));\n//   };\n\n//   const uploadFile = (file, urlType) => {\n//     const storage = getStorage(app);\n//     const fileName = new Date().getTime() + file.name;\n//     const storageRef = ref(storage, fileName);\n//     const uploadTask = uploadBytesResumable(storageRef, file);\n\n//     uploadTask.on(\n//       \"state_changed\",\n//       (snapshot) => {\n//         const progress =\n//           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n//         urlType === \"imgUrl\" ? setImgPerc(Math.round(progress)) : setVideoPerc(Math.round(progress));\n//         switch (snapshot.state) {\n//           case \"paused\":\n//             console.log(\"Upload is paused\");\n//             break;\n//           case \"running\":\n//             console.log(\"Upload is running\");\n//             break;\n//           default:\n//             break;\n//         }\n//       },\n//       (error) => {},\n//       () => {\n//         getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n//           setInputs((prev) => {\n//             return { ...prev, [urlType]: downloadURL };\n//           });\n//         });\n//       }\n//     );\n//   };\n\n//   useEffect(() => {\n//     video && uploadFile(video , \"videoUrl\");\n//   }, [video]);\n\n//   useEffect(() => {\n//     img && uploadFile(img, \"imgUrl\");\n//   }, [img]);\n\n//   const handleUpload = async (e)=>{\n//     e.preventDefault();\n//     const res = await axios.post(\"/videos\", {...inputs, tags})\n//     setOpen(false)\n//     res.status===200 && navigate(`/video/${res.data._id}`)\n//   }\n\n//   return (\n//     <Container>\n//       <Wrapper>\n//         <Close onClick={() => setOpen(false)}>X</Close>\n//         <Title>Upload a New Video</Title>\n//         <Label>Video:</Label>\n//         {videoPerc > 0 ? (\n//           \"Uploading:\" + videoPerc\n//         ) : (\n//           <Input\n//             type=\"file\"\n//             accept=\"video/*\"\n//             onChange={(e) => setVideo(e.target.files[0])}\n//           />\n//         )}\n//         <Input\n//           type=\"text\"\n//           placeholder=\"Title\"\n//           name=\"title\"\n//           onChange={handleChange}\n//         />\n//         <Desc\n//           placeholder=\"Description\"\n//           name=\"desc\"\n//           rows={8}\n//           onChange={handleChange}\n//         />\n//         <Input\n//           type=\"text\"\n//           placeholder=\"Separate the tags with commas.\"\n//           onChance={handleTags}\n//         />\n//         <Label>Image:</Label>\n//         {imgPerc > 0 ? (\n//           \"Uploading:\" + imgPerc + \"%\"\n//         ) : (\n//           <Input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             onChange={(e) => setImg(e.target.files[0])}\n//           />\n//         )}\n//         <Button onClick={handleUpload}>Upload</Button>\n//       </Wrapper>\n//     </Container>\n//   );\n// };\n\n// export default Upload;","map":{"version":3,"names":[],"sources":["D:/WORK/semester 5/SE/final3/client/src/components/Upload.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import {\r\n//   getStorage,\r\n//   ref,\r\n//   uploadBytesResumable,\r\n//   getDownloadURL,\r\n// } from \"firebase/storage\";\r\n// import app from \"../firebase\";\r\n// import axios from \"axios\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// const Container = styled.div`\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   position: absolute;\r\n//   top: 0;\r\n//   left: 0;\r\n//   background-color: #000000a7;\r\n//   display: flex;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n// `;\r\n\r\n// const Wrapper = styled.div`\r\n//   width: 600px;\r\n//   height: 600px;\r\n//   background-color: ${({ theme }) => theme.bgLighter};\r\n//   color: ${({ theme }) => theme.text};\r\n//   padding: 20px;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   gap: 20px;\r\n//   position: relative;\r\n// `;\r\n// const Close = styled.div`\r\n//   position: absolute;\r\n//   top: 10px;\r\n//   right: 10px;\r\n//   cursor: pointer;\r\n// `;\r\n// const Title = styled.h1`\r\n//   text-align: center;\r\n// `;\r\n\r\n// const Input = styled.input`\r\n//   border: 1px solid ${({ theme }) => theme.soft};\r\n//   color: ${({ theme }) => theme.text};\r\n//   border-radius: 3px;\r\n//   padding: 10px;\r\n//   background-color: transparent;\r\n//   z-index: 999;\r\n// `;\r\n// const Desc = styled.textarea`\r\n//   border: 1px solid ${({ theme }) => theme.soft};\r\n//   color: ${({ theme }) => theme.text};\r\n//   border-radius: 3px;\r\n//   padding: 10px;\r\n//   background-color: transparent;\r\n// `;\r\n// const Button = styled.button`\r\n//   border-radius: 3px;\r\n//   border: none;\r\n//   padding: 10px 20px;\r\n//   font-weight: 500;\r\n//   cursor: pointer;\r\n//   background-color: ${({ theme }) => theme.soft};\r\n//   color: ${({ theme }) => theme.textSoft};\r\n// `;\r\n// const Label = styled.label`\r\n//   font-size: 14px;\r\n// `;\r\n// const Upload = ({ setOpen }) => {\r\n//   const [img, setImg] = useState(undefined);\r\n//   const [video, setVideo] = useState(undefined);\r\n//   const [imgPerc, setImgPerc] = useState(0);\r\n//   const [videoPerc, setVideoPerc] = useState(0);\r\n//   const [inputs, setInputs] = useState({});\r\n//   const [tags, setTags] = useState([]);\r\n\r\n//   const navigate = useNavigate()\r\n\r\n//   const handleChange = (e) => {\r\n//     setInputs((prev) => {\r\n//       return { ...prev, [e.target.name]: e.target.value };\r\n//     });\r\n//   };\r\n\r\n//   const handleTags = (e) => {\r\n//     setTags(e.target.value.split(\",\"));\r\n//   };\r\n\r\n//   const uploadFile = (file, urlType) => {\r\n//     const storage = getStorage(app);\r\n//     const fileName = new Date().getTime() + file.name;\r\n//     const storageRef = ref(storage, fileName);\r\n//     const uploadTask = uploadBytesResumable(storageRef, file);\r\n\r\n//     uploadTask.on(\r\n//       \"state_changed\",\r\n//       (snapshot) => {\r\n//         const progress =\r\n//           (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n//         urlType === \"imgUrl\" ? setImgPerc(Math.round(progress)) : setVideoPerc(Math.round(progress));\r\n//         switch (snapshot.state) {\r\n//           case \"paused\":\r\n//             console.log(\"Upload is paused\");\r\n//             break;\r\n//           case \"running\":\r\n//             console.log(\"Upload is running\");\r\n//             break;\r\n//           default:\r\n//             break;\r\n//         }\r\n//       },\r\n//       (error) => {},\r\n//       () => {\r\n//         getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n//           setInputs((prev) => {\r\n//             return { ...prev, [urlType]: downloadURL };\r\n//           });\r\n//         });\r\n//       }\r\n//     );\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     video && uploadFile(video , \"videoUrl\");\r\n//   }, [video]);\r\n\r\n//   useEffect(() => {\r\n//     img && uploadFile(img, \"imgUrl\");\r\n//   }, [img]);\r\n\r\n//   const handleUpload = async (e)=>{\r\n//     e.preventDefault();\r\n//     const res = await axios.post(\"/videos\", {...inputs, tags})\r\n//     setOpen(false)\r\n//     res.status===200 && navigate(`/video/${res.data._id}`)\r\n//   }\r\n\r\n//   return (\r\n//     <Container>\r\n//       <Wrapper>\r\n//         <Close onClick={() => setOpen(false)}>X</Close>\r\n//         <Title>Upload a New Video</Title>\r\n//         <Label>Video:</Label>\r\n//         {videoPerc > 0 ? (\r\n//           \"Uploading:\" + videoPerc\r\n//         ) : (\r\n//           <Input\r\n//             type=\"file\"\r\n//             accept=\"video/*\"\r\n//             onChange={(e) => setVideo(e.target.files[0])}\r\n//           />\r\n//         )}\r\n//         <Input\r\n//           type=\"text\"\r\n//           placeholder=\"Title\"\r\n//           name=\"title\"\r\n//           onChange={handleChange}\r\n//         />\r\n//         <Desc\r\n//           placeholder=\"Description\"\r\n//           name=\"desc\"\r\n//           rows={8}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <Input\r\n//           type=\"text\"\r\n//           placeholder=\"Separate the tags with commas.\"\r\n//           onChance={handleTags}\r\n//         />\r\n//         <Label>Image:</Label>\r\n//         {imgPerc > 0 ? (\r\n//           \"Uploading:\" + imgPerc + \"%\"\r\n//         ) : (\r\n//           <Input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             onChange={(e) => setImg(e.target.files[0])}\r\n//           />\r\n//         )}\r\n//         <Button onClick={handleUpload}>Upload</Button>\r\n//       </Wrapper>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Upload;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}