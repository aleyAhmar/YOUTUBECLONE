{"ast":null,"code":"export default function dateParser(date) {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n  const parts = String(date).match(/\\d+/g);\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}","map":{"version":3,"names":["dateParser","date","parsed","Date","Number","isNaN","valueOf","parts","String","match","length","firstP","secondP","restPs","map","x","parseInt","correctedParts","isoDate","UTC"],"sources":["D:/WORK/semester 5/SE/final3/client/node_modules/react-timeago/es6/dateParser.js"],"sourcesContent":["export default function dateParser(date) {\n  const parsed = new Date(date);\n  if (!Number.isNaN(parsed.valueOf())) {\n    return parsed;\n  }\n  const parts = String(date).match(/\\d+/g);\n  if (parts == null || parts.length <= 2) {\n    return parsed;\n  } else {\n    const [firstP, secondP, ...restPs] = parts.map(x => parseInt(x));\n    const correctedParts = [firstP, secondP - 1, ...restPs];\n    const isoDate = new Date(Date.UTC(...correctedParts));\n    return isoDate;\n  }\n}"],"mappings":"AAAA,eAAe,SAASA,UAAUA,CAACC,IAAI,EAAE;EACvC,MAAMC,MAAM,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;EAC7B,IAAI,CAACG,MAAM,CAACC,KAAK,CAACH,MAAM,CAACI,OAAO,CAAC,CAAC,CAAC,EAAE;IACnC,OAAOJ,MAAM;EACf;EACA,MAAMK,KAAK,GAAGC,MAAM,CAACP,IAAI,CAAC,CAACQ,KAAK,CAAC,MAAM,CAAC;EACxC,IAAIF,KAAK,IAAI,IAAI,IAAIA,KAAK,CAACG,MAAM,IAAI,CAAC,EAAE;IACtC,OAAOR,MAAM;EACf,CAAC,MAAM;IACL,MAAM,CAACS,MAAM,EAAEC,OAAO,EAAE,GAAGC,MAAM,CAAC,GAAGN,KAAK,CAACO,GAAG,CAACC,CAAC,IAAIC,QAAQ,CAACD,CAAC,CAAC,CAAC;IAChE,MAAME,cAAc,GAAG,CAACN,MAAM,EAAEC,OAAO,GAAG,CAAC,EAAE,GAAGC,MAAM,CAAC;IACvD,MAAMK,OAAO,GAAG,IAAIf,IAAI,CAACA,IAAI,CAACgB,GAAG,CAAC,GAAGF,cAAc,CAAC,CAAC;IACrD,OAAOC,OAAO;EAChB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}